name: Release Binaries

on:
  workflow_dispatch:

jobs:
  package:
    runs-on: '${{ matrix.os }}'
    strategy:
      matrix:
        os: [ubuntu-latest, macOS-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: macOS-latest
            target: x86_64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
    steps:
      - uses: hecrj/setup-rust-action@v1
        with:
          rust-version: stable

      - uses: actions/checkout@v4

      - name: Setup target
        run: rustup target add ${{ matrix.target }}

      - name: Install musl
        run: sudo apt-get install musl-tools
        if: contains(matrix.target, 'linux-musl')

      - name: Build
        run: cargo build --target ${{ matrix.target }} --release --verbose

      - name: Run tests
        run: cargo test --verbose

      - name: Strip binary
        run: strip 'target/${{ matrix.target }}/release/markdown-harvest'
        if: "!contains(matrix.target, 'windows')"

      - uses: little-core-labs/get-git-tag@v3.0.2
      - name: Build package
        id: package
        shell: bash
        run: |
          ARCHIVE_NAME="markdown-harvest-${GITHUB_TAG_NAME}-${{ matrix.target }}"
          if [[ '${{ matrix.target }}' == *windows* ]]; then
            ARCHIVE_FILE="${ARCHIVE_NAME}.zip"
            mv LICENSE LICENSE.txt
            7z a "${ARCHIVE_FILE}" "./target/${{ matrix.target }}/release/markdown-harvest.exe" ./README.md ./CHANGELOG.md ./LICENSE.txt
            echo ::set-output "name=file::${ARCHIVE_FILE}"
            echo ::set-output "name=name::${ARCHIVE_NAME}.zip"
          else
            ARCHIVE_FILE="/tmp/${ARCHIVE_NAME}.tar.gz"
            mkdir "/tmp/${ARCHIVE_NAME}"
            cp README.md CHANGELOG.md LICENSE "target/${{ matrix.target }}/release/markdown-harvest" "/tmp/${ARCHIVE_NAME}"
            tar -czf "${ARCHIVE_FILE}" -C /tmp/ "${ARCHIVE_NAME}"
            echo ::set-output "name=file::${ARCHIVE_FILE}"
            echo ::set-output "name=name::${ARCHIVE_NAME}.tar.gz"
          fi
      - name: Upload package
        uses: svenstaro/upload-release-action@v1-release
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: ${{ steps.package.outputs.file }}
          asset_name:  ${{ steps.package.outputs.name }}
          tag: ${{ github.ref }}
          overwrite: true